#!/usr/bin/python3 -W ignore::DeprecationWarning
# -*- coding:utf8 -*-
import sys
import spacy
import re
import codecs
from document_parser import DocumentParser

# using medium sized Spacy model
nlp = spacy.load("en_core_web_md")


def load_text(filename):
    with open(filename) as textFile:
        text = textFile.read()
        parser = DocumentParser(text)
        return parser


def who(question, sentence):
    ans = ""
    return ans


def what(question, sentence):
    ans = ""
    return ans


def when(question, sentence):
    ans = ""
    return ans


def get_first_NNS(words):
    for word in words:
        if word.xpos == 'NNS':
            return word


def howmany(question, sentence):
    how_many_noun = get_first_NNS(question.words)
    CD_NNS_ans = ''
    for word in sentence.words:
        if word.xpos == 'CD':
            if len(sentence.words) >= word.id:
                CD_adj_word = get_first_NNS(sentence.words[word.id:])
                if CD_adj_word.xpos == 'NNS':
                    if CD_adj_word.text.lower() == how_many_noun.text.lower():
                        CD_NNS_ans = word.text + ' ' + CD_adj_word.text

    return CD_NNS_ans


def where(question, sentence):
    ans = ""
    return ans


def why(question, sentence):
    ans = ""
    return ans


def yesno(question, sentence):
    return sentence.text

# return empty string if no answer


def answer(question, article):
    ans = ""
    max_sim = 0
    max_sim_sentence = None
    q = nlp(question.text)
    for sentence in article:
        s = nlp(sentence.text)
        sim = q.similarity(s)
        if sim > max_sim:
            max_sim = sim
            max_sim_sentence = sentence

    first_two = question.words[:2]
    first_word_lemma = first_two[0].lemma
    if first_two[0].text == "Who":
        ans = who(question, max_sim_sentence)
    elif first_two[0].text == "What":
        ans = what(question, max_sim_sentence)
    elif first_two[0].text == "When":
        ans = when(question, max_sim_sentence)
    elif first_two[0].text == "Where":
        ans = where(question, max_sim_sentence)
    elif first_two[0].text == "Why":
        ans = why(question, max_sim_sentence)
    elif first_two[0].text == "How" and first_two[1].text == "many":
        ans = howmany(question, max_sim_sentence)
    elif first_word_lemma == "do" or first_word_lemma == "be":
        ans = yesno(question, max_sim_sentence)

    return ans


if __name__ == "__main__":
    input_file = sys.argv[1]
    question_file = sys.argv[2]
    article = load_text(input_file)
    questions = load_text(question_file)
    answers = []

    # empty string/blank line if not able to answer question
    for q in questions.sentences:
        ans = answer(q, article.sentences)
        answers.append(ans)

    for a in answers:
        print(a)

    """
    with open(question_file, 'r') as f:
        count = 0
        for line in f:
            count += 1
            print('A'+str(count))
    """
